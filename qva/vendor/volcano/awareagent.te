# Copyright (c) 2024-2025 Qualcomm Innovation Center, Inc. All rights reserved.
# # SPDX-License-Identifier: BSD-3-Clause-Clear
#
type vendor_awareagent, domain;
type vendor_awareagent_exec, exec_type, vendor_file_type, file_type;

# Allow for transition from init domain to vendor_hal_awareagent_qti
init_daemon_domain(vendor_awareagent)

#============= vendor_awareagent ==============
allow vendor_awareagent proc_meminfo:file { r_file_perms };
allow vendor_awareagent proc_stat:file { r_file_perms };
allow vendor_awareagent sysfs_net:dir { r_dir_perms };
allow vendor_awareagent sysfs_net:file { r_file_perms };

get_prop(vendor_awareagent, wifi_hal_prop);

allow vendor_awareagent vendor_sysfs_battery_supply:dir search;
allow vendor_awareagent vendor_sysfs_battery_supply:file { read open };

allow vendor_awareagent vendor_aware_vndr_data_file:dir { create_dir_perms };
allow vendor_awareagent vendor_aware_vndr_data_file:file { create_file_perms };
neverallow {domain -init -vendor_init -vendor_awareagent -vendor_aware_platform_service } vendor_aware_vndr_data_file:{dir file} *;

allow vendor_awareagent vendor_persist_aware_file:dir create_dir_perms;
allow vendor_awareagent vendor_persist_aware_file:file create_file_perms;
allow vendor_awareagent mnt_vendor_file:dir { getattr search };
neverallow {domain -init -vendor_init -vendor_awareagent -vendor_aware_platform_service } vendor_persist_aware_file:{dir file} *;

get_prop(vendor_awareagent, boot_status_prop)

binder_call(vendor_awareagent, servicemanager)

allow vendor_awareagent proc_uptime:file { open read };

# Connect to network
allow vendor_awareagent dnsproxyd_socket:sock_file write;
allow vendor_awareagent netd:unix_stream_socket connectto;
allow vendor_awareagent self:udp_socket {create bind setattr setopt getopt connect };
allow vendor_awareagent self:tcp_socket {create_stream_socket_perms };
allow vendor_awareagent fwmarkd_socket:sock_file write;
allow vendor_awareagent port:tcp_socket name_connect;
allow netd vendor_awareagent:fd use;
allow netd vendor_awareagent:tcp_socket { read write getopt setopt bind create setattr };
allow vendor_awareagent proc_version:file getattr;

# for socket access
allow vendor_awareagent vendor_aware_socket:dir rw_dir_perms;
allow vendor_awareagent vendor_aware_socket:dir create_dir_perms;
allow vendor_awareagent vendor_aware_socket:sock_file create_file_perms;
allow vendor_awareagent vendor_aware_socket:sock_file rw_file_perms;
allow vendor_awareagent vendor_aware_socket:unix_dgram_socket { read write sendto };

# QWES access via PM solib
unix_socket_connect(vendor_awareagent, vendor_ssgtzd, vendor_ssgtzd)

userdebug_or_eng(`
get_prop(vendor_awareagent, vendor_mink_trace_prop)
')

allow vendor_awareagent vendor_aware_platform_service:unix_dgram_socket sendto;

allow vendor_awareagent vendor_wifi_vendor_data_file:dir search;
allow vendor_awareagent wpa_data_file:dir { add_name remove_name search write };
allow vendor_awareagent wpa_data_file:sock_file { create setattr write };

